# pay_pal_restap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module PayPalRestapIs
  # The platform or partner fee, commission, or brokerage fee that is associated
  # with the transaction. Not a separate or isolated transaction leg from the
  # external perspective. The platform fee is limited in scope and is always
  # associated with the original payment for the purchase unit.
  class PlatformFee < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The currency and amount for a financial transaction, such as a balance or
    # payment due.
    # @return [Money]
    attr_accessor :amount

    # The details for the merchant who receives the funds and fulfills the
    # order. The merchant is also known as the payee.
    # @return [PayeeBase]
    attr_accessor :payee

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['amount'] = 'amount'
      @_hash['payee'] = 'payee'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        payee
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(amount = nil, payee = SKIP)
      @amount = amount
      @payee = payee unless payee == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      amount = Money.from_hash(hash['amount']) if hash['amount']
      payee = PayeeBase.from_hash(hash['payee']) if hash['payee']

      # Create object from extracted values.
      PlatformFee.new(amount,
                      payee)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} amount: #{@amount}, payee: #{@payee}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} amount: #{@amount.inspect}, payee: #{@payee.inspect}>"
    end
  end
end
