# pay_pal_restap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module PayPalRestapIs
  # The phone information.
  class PhoneWithType < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The phone type.
    # @return [PhoneType]
    attr_accessor :phone_type

    # The phone number in its canonical international [E.164 numbering plan
    # format](https://www.itu.int/rec/T-REC-E.164/en).
    # @return [PhoneNumber]
    attr_accessor :phone_number

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['phone_type'] = 'phone_type'
      @_hash['phone_number'] = 'phone_number'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        phone_type
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(phone_number = nil, phone_type = SKIP)
      @phone_type = phone_type unless phone_type == SKIP
      @phone_number = phone_number
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      phone_number = PhoneNumber.from_hash(hash['phone_number']) if hash['phone_number']
      phone_type = hash.key?('phone_type') ? hash['phone_type'] : SKIP

      # Create object from extracted values.
      PhoneWithType.new(phone_number,
                        phone_type)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} phone_type: #{@phone_type}, phone_number: #{@phone_number}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} phone_type: #{@phone_type.inspect}, phone_number:"\
      " #{@phone_number.inspect}>"
    end
  end
end
