# pay_pal_restap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module PayPalRestapIs
  # Information used to pay using BLIK one-click flow.
  class BLIKOneClickPaymentObject < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The merchant generated, unique reference serving as a primary identifier
    # for accounts connected between Blik and a merchant.
    # @return [String]
    attr_accessor :consumer_reference

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['consumer_reference'] = 'consumer_reference'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        consumer_reference
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(consumer_reference = SKIP)
      @consumer_reference = consumer_reference unless consumer_reference == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      consumer_reference =
        hash.key?('consumer_reference') ? hash['consumer_reference'] : SKIP

      # Create object from extracted values.
      BLIKOneClickPaymentObject.new(consumer_reference)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} consumer_reference: #{@consumer_reference}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} consumer_reference: #{@consumer_reference.inspect}>"
    end
  end
end
