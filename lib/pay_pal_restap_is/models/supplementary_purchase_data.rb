# pay_pal_restap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module PayPalRestapIs
  # The capture identification-related fields. Includes the invoice ID, custom
  # ID, note to payer, and soft descriptor.
  class SupplementaryPurchaseData < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The API caller-provided external invoice number for this order. Appears in
    # both the payer's transaction history and the emails that the payer
    # receives.
    # @return [String]
    attr_accessor :invoice_id

    # An informational note about this settlement. Appears in both the payer's
    # transaction history and the emails that the payer receives.
    # @return [String]
    attr_accessor :note_to_payer

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['invoice_id'] = 'invoice_id'
      @_hash['note_to_payer'] = 'note_to_payer'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        invoice_id
        note_to_payer
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(invoice_id = SKIP, note_to_payer = SKIP)
      @invoice_id = invoice_id unless invoice_id == SKIP
      @note_to_payer = note_to_payer unless note_to_payer == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      invoice_id = hash.key?('invoice_id') ? hash['invoice_id'] : SKIP
      note_to_payer = hash.key?('note_to_payer') ? hash['note_to_payer'] : SKIP

      # Create object from extracted values.
      SupplementaryPurchaseData.new(invoice_id,
                                    note_to_payer)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} invoice_id: #{@invoice_id}, note_to_payer: #{@note_to_payer}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} invoice_id: #{@invoice_id.inspect}, note_to_payer:"\
      " #{@note_to_payer.inspect}>"
    end
  end
end
