# pay_pal_restap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module PayPalRestapIs
  # The order request details.
  class OrderRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The intent to either capture payment immediately or authorize a payment
    # for an order after order creation.
    # @return [CheckoutPaymentIntent]
    attr_accessor :intent

    # The intent to either capture payment immediately or authorize a payment
    # for an order after order creation.
    # @return [Payer]
    attr_accessor :payer

    # An array of purchase units. Each purchase unit establishes a contract
    # between a payer and the payee. Each purchase unit represents either a full
    # or partial order that the payer intends to purchase from the payee.
    # @return [Array[PurchaseUnitRequest]]
    attr_accessor :purchase_units

    # The payment source definition.
    # @return [PaymentSource]
    attr_accessor :payment_source

    # Customizes the payer experience during the approval process for the
    # payment with PayPal.<blockquote><strong>Note:</strong> Partners and
    # Marketplaces might configure <code>brand_name</code> and
    # <code>shipping_preference</code> during partner account setup, which
    # overrides the request values.</blockquote>
    # @return [OrderApplicationContext]
    attr_accessor :application_context

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['intent'] = 'intent'
      @_hash['payer'] = 'payer'
      @_hash['purchase_units'] = 'purchase_units'
      @_hash['payment_source'] = 'payment_source'
      @_hash['application_context'] = 'application_context'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        payer
        payment_source
        application_context
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(intent = nil, purchase_units = nil, payer = SKIP,
                   payment_source = SKIP, application_context = SKIP)
      @intent = intent
      @payer = payer unless payer == SKIP
      @purchase_units = purchase_units
      @payment_source = payment_source unless payment_source == SKIP
      @application_context = application_context unless application_context == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      intent = hash.key?('intent') ? hash['intent'] : nil
      # Parameter is an array, so we need to iterate through it
      purchase_units = nil
      unless hash['purchase_units'].nil?
        purchase_units = []
        hash['purchase_units'].each do |structure|
          purchase_units << (PurchaseUnitRequest.from_hash(structure) if structure)
        end
      end

      purchase_units = nil unless hash.key?('purchase_units')
      payer = Payer.from_hash(hash['payer']) if hash['payer']
      payment_source = PaymentSource.from_hash(hash['payment_source']) if hash['payment_source']
      application_context = OrderApplicationContext.from_hash(hash['application_context']) if
        hash['application_context']

      # Create object from extracted values.
      OrderRequest.new(intent,
                       purchase_units,
                       payer,
                       payment_source,
                       application_context)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} intent: #{@intent}, payer: #{@payer}, purchase_units: #{@purchase_units},"\
      " payment_source: #{@payment_source}, application_context: #{@application_context}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} intent: #{@intent.inspect}, payer: #{@payer.inspect}, purchase_units:"\
      " #{@purchase_units.inspect}, payment_source: #{@payment_source.inspect},"\
      " application_context: #{@application_context.inspect}>"
    end
  end
end
