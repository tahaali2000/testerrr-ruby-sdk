# pay_pal_restap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module PayPalRestapIs
  # Information about the Payment data obtained by decrypting Apple Pay token.
  class ApplePayDecryptedTokenData < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The currency and amount for a financial transaction, such as a balance or
    # payment due.
    # @return [Money]
    attr_accessor :transaction_amount

    # The payment card to use to fund a payment. Can be a credit or debit card.
    # @return [ApplePayTokenizedCard]
    attr_accessor :tokenized_card

    # Apple Pay Hex-encoded device manufacturer identifier. The pattern is
    # defined by an external party and supports Unicode.
    # @return [String]
    attr_accessor :device_manufacturer_id

    # Indicates the type of payment data passed, in case of Non China the
    # payment data is 3DSECURE and for China it is EMV.
    # @return [ApplePayPaymentDataType]
    attr_accessor :payment_data_type

    # Information about the decrypted apple pay payment data for the token like
    # cryptogram, eci indicator.
    # @return [ApplePayPaymentData]
    attr_accessor :payment_data

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['transaction_amount'] = 'transaction_amount'
      @_hash['tokenized_card'] = 'tokenized_card'
      @_hash['device_manufacturer_id'] = 'device_manufacturer_id'
      @_hash['payment_data_type'] = 'payment_data_type'
      @_hash['payment_data'] = 'payment_data'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        transaction_amount
        device_manufacturer_id
        payment_data_type
        payment_data
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(tokenized_card = nil, transaction_amount = SKIP,
                   device_manufacturer_id = SKIP, payment_data_type = SKIP,
                   payment_data = SKIP)
      @transaction_amount = transaction_amount unless transaction_amount == SKIP
      @tokenized_card = tokenized_card
      @device_manufacturer_id = device_manufacturer_id unless device_manufacturer_id == SKIP
      @payment_data_type = payment_data_type unless payment_data_type == SKIP
      @payment_data = payment_data unless payment_data == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      tokenized_card = ApplePayTokenizedCard.from_hash(hash['tokenized_card']) if
        hash['tokenized_card']
      transaction_amount = Money.from_hash(hash['transaction_amount']) if
        hash['transaction_amount']
      device_manufacturer_id =
        hash.key?('device_manufacturer_id') ? hash['device_manufacturer_id'] : SKIP
      payment_data_type =
        hash.key?('payment_data_type') ? hash['payment_data_type'] : SKIP
      payment_data = ApplePayPaymentData.from_hash(hash['payment_data']) if hash['payment_data']

      # Create object from extracted values.
      ApplePayDecryptedTokenData.new(tokenized_card,
                                     transaction_amount,
                                     device_manufacturer_id,
                                     payment_data_type,
                                     payment_data)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} transaction_amount: #{@transaction_amount}, tokenized_card:"\
      " #{@tokenized_card}, device_manufacturer_id: #{@device_manufacturer_id}, payment_data_type:"\
      " #{@payment_data_type}, payment_data: #{@payment_data}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} transaction_amount: #{@transaction_amount.inspect}, tokenized_card:"\
      " #{@tokenized_card.inspect}, device_manufacturer_id: #{@device_manufacturer_id.inspect},"\
      " payment_data_type: #{@payment_data_type.inspect}, payment_data: #{@payment_data.inspect}>"
    end
  end
end
