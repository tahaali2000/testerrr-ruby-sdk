# pay_pal_restap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module PayPalRestapIs
  # Supplementary data about a payment. This object passes information that can
  # be used to improve risk assessments and processing costs, for example, by
  # providing Level 2 and Level 3 payment data.
  class SupplementaryData < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Merchants and partners can add Level 2 and 3 data to payments to reduce
    # risk and payment processing costs. For more information about processing
    # payments, see <a
    # href="https://developer.paypal.com/docs/checkout/advanced/processing/">che
    # ckout</a> or <a
    # href="https://developer.paypal.com/docs/multiparty/checkout/advanced/proce
    # ssing/">multiparty checkout</a>.
    # @return [CardSupplementaryData]
    attr_accessor :card

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['card'] = 'card'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        card
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(card = SKIP)
      @card = card unless card == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      card = CardSupplementaryData.from_hash(hash['card']) if hash['card']

      # Create object from extracted values.
      SupplementaryData.new(card)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} card: #{@card}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} card: #{@card.inspect}>"
    end
  end
end
