# pay_pal_restap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module PayPalRestapIs
  # Results of Authentication such as 3D Secure.
  class AuthenticationResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Liability shift indicator. The outcome of the issuer's authentication.
    # @return [LiabilityShiftIndicator]
    attr_accessor :liability_shift

    # Results of 3D Secure Authentication.
    # @return [ThreeDSecureAuthenticationResponse]
    attr_accessor :three_d_secure

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['liability_shift'] = 'liability_shift'
      @_hash['three_d_secure'] = 'three_d_secure'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        liability_shift
        three_d_secure
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(liability_shift = SKIP, three_d_secure = SKIP)
      @liability_shift = liability_shift unless liability_shift == SKIP
      @three_d_secure = three_d_secure unless three_d_secure == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      liability_shift =
        hash.key?('liability_shift') ? hash['liability_shift'] : SKIP
      three_d_secure = ThreeDSecureAuthenticationResponse.from_hash(hash['three_d_secure']) if
        hash['three_d_secure']

      # Create object from extracted values.
      AuthenticationResponse.new(liability_shift,
                                 three_d_secure)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} liability_shift: #{@liability_shift}, three_d_secure: #{@three_d_secure}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} liability_shift: #{@liability_shift.inspect}, three_d_secure:"\
      " #{@three_d_secure.inspect}>"
    end
  end
end
